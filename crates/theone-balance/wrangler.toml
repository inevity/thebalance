name = "one-balance-rust"
main = "build/worker/shim.mjs"
compatibility_date = "2025-07-21"
#compatibility_flags = ["nodejs_compat", "experimental_wasm_bulk_memory"]

[build]
command = "cargo install -q worker-build && worker-build --release"

# =============================================================================
# == BINDINGS CONFIGURATION (This section should remain uncommented) ==
# =============================================================================

# This binding is required for ANY of the Durable Object strategies
# (`do_kv`, `do_sqlite`, `do_d1`).
# [durable_objects]
# bindings = [
#   { name = "API_KEY_MANAGER", class_name = "ApiKeyManager" }
# ]

# This binding is required for the `raw_d1` and `do_d1` strategies.
[[d1_databases]]
binding = "DB"
database_name = "one-balance"
database_id = "" # Will be filled by Wrangler on first deploy.
migrations_dir = "migrations"

[[queues.producers]]
queue = "state-updater"
binding = "STATE_UPDATER"

[[queues.consumers]]
queue = "state-updater"


# =============================================================================
# == MIGRATION STRATEGY (Uncomment ONLY ONE of the blocks below) ==
# =============================================================================

# -------------------------------------------------------------------
# STRATEGY 1: `do_kv` / STRATEGY 4: `do_d1`
# This migration defines ApiKeyManager as a standard Durable Object.
#
# [[migrations]]
# tag = "v1-kv"
# new_classes = ["ApiKeyManager"]

# -------------------------------------------------------------------
# STRATEGY 2: `do_sqlite`
# This migration defines ApiKeyManager as a SQLite-enabled Durable Object.
#
# [[migrations]]
# tag = "v1-sqlite"
# new_sqlite_classes = ["ApiKeyManager"]

# -------------------------------------------------------------------
# STRATEGY 3: `raw_d1`
# This migration defines the schema for the D1 database.
# Note: The `durable_objects` binding above can be commented out for this strategy.
#
# [[migrations]]
# tag = "v1-d1-schema"
# migrations = [
#     { type = "sql", sql = ["CREATE TABLE IF NOT EXISTS api_keys (id TEXT PRIMARY KEY, key TEXT NOT NULL, provider TEXT NOT NULL, status TEXT NOT NULL, model_coolings TEXT NOT NULL, last_used INTEGER NOT NULL);"] }
# ]

#
# STRATEGY 4: `do_d1`
# Note: The `do_d1` strategy uses the bindings from both `do_kv` and `raw_d1`.
# Its purpose is to fail compilation, so its migration setup is the same as `do_kv`.
